
import java.awt.Desktop;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.Transferable;
import java.awt.datatransfer.UnsupportedFlavorException;
import java.net.MalformedURLException;
import java.net.URL;
import java.io.*;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.Timer;
import java.util.TimerTask;
import java.sql.Timestamp;
import java.util.LinkedList;
import java.util.Scanner;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JList;
import javax.swing.JOptionPane;
import org.jsoup.helper.DescendableLinkedList;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Eric
 */
public class MainFrame extends javax.swing.JFrame {

    private int count = 0;
    
    private LinkedList<String> linkArrayFull = new LinkedList();
    private DefaultListModel<String> linkModelFull = new DefaultListModel<>();
    private LinkedList<String> linkArrayOpen = new LinkedList();
    private DefaultListModel<String> linkModelOpen = new DefaultListModel<>();

    
    
    private boolean killTimer = true;
    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        
        initComponents();
       
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jPanel2 = new javax.swing.JPanel();
        jButtonTestSend = new javax.swing.JButton();
        jTextTestMsg = new javax.swing.JTextField();
        jButtonAdd = new javax.swing.JButton();
        jTextFieldAddLink = new javax.swing.JTextField();
        jButtonRemove = new javax.swing.JButton();
        lblSpeed = new javax.swing.JLabel();
        txtSpeed = new javax.swing.JTextField();
        lblCount = new javax.swing.JLabel();
        lblLastChecked = new javax.swing.JLabel();
        btnStart = new javax.swing.JButton();
        jCheckBoxEmail = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        txtEmail = new javax.swing.JTextField();
        lblEmail = new javax.swing.JLabel();
        lblLink = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jLinkListFull = new javax.swing.JList();
        lblLink1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jLinkListOpen = new javax.swing.JList();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenuSave = new javax.swing.JMenuItem();
        jMenuOpen = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();

        fileChooser.setFileFilter(new MyCustomFilter());

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jButtonTestSend.setText("Test Send");
        jButtonTestSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTestSendActionPerformed(evt);
            }
        });

        jTextTestMsg.setText("Test Message");

        jButtonAdd.setText("Add");
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });

        jTextFieldAddLink.setText("paste link here");
        jTextFieldAddLink.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldAddLinkFocusGained(evt);
            }
        });

        jButtonRemove.setText("Remove");
        jButtonRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRemoveActionPerformed(evt);
            }
        });

        lblSpeed.setText("Speed (min)");

        txtSpeed.setText("1");
        txtSpeed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSpeedActionPerformed(evt);
            }
        });

        lblCount.setText("Count:");

        lblLastChecked.setText("Last Checked:");

        btnStart.setText("Start");
        btnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartActionPerformed(evt);
            }
        });

        jCheckBoxEmail.setSelected(true);
        jCheckBoxEmail.setText("Send Email Notification");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblLastChecked)
                    .addComponent(lblCount)
                    .addComponent(jButtonRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jButtonTestSend, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(lblSpeed))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextTestMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldAddLink, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnStart)
                    .addComponent(jCheckBoxEmail))
                .addContainerGap(77, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jCheckBoxEmail)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonTestSend)
                    .addComponent(jTextTestMsg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAdd)
                    .addComponent(jTextFieldAddLink, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonRemove)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSpeed)
                    .addComponent(txtSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblCount)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblLastChecked)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnStart)
                .addGap(31, 31, 31))
        );

        txtEmail.setText("ericjnelson012@gmail.com");

        lblEmail.setText("Email");

        lblLink.setText("Full Courses");

        jLinkListFull.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jLinkListFull.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jLinkListFullFocusGained(evt);
            }
        });
        jLinkListFull.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLinkListFullMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(jLinkListFull);

        lblLink1.setText("Open Courses");

        jLinkListOpen.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jLinkListOpen.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jLinkListOpenFocusGained(evt);
            }
        });
        jLinkListOpen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLinkListOpenMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jLinkListOpen);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblEmail)
                    .addComponent(lblLink)
                    .addComponent(lblLink1))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblLink, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblLink1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jMenu3.setText("File");

        jMenuSave.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuSave.setText("Save");
        jMenuSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuSaveActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuSave);

        jMenuOpen.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        jMenuOpen.setText("Open");
        jMenuOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuOpenActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuOpen);

        jMenuBar2.add(jMenu3);

        jMenu4.setText("Options");

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("Debug");
        jMenu4.add(jCheckBoxMenuItem1);

        jMenuBar2.add(jMenu4);

        setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addToLists(String link){
        String name = parseName(link);
        linkArrayFull.add(link);
        linkModelFull.addElement("<HTML><a href=\"\">"+name+"</a></HTML>");
        jLinkListFull.setModel(linkModelFull);
    }
    private void clearLists(){
        linkArrayFull = new LinkedList<>();
        linkModelFull = new DefaultListModel<>();
        linkArrayOpen = new LinkedList<>();
        linkModelOpen = new DefaultListModel<>();
        jLinkListFull.setModel(linkModelFull);
        jLinkListOpen.setModel(linkModelOpen);
    }
    
    private String getHtml(String s) {
        URL oracle;
        s=s+"&campuscd=UBCO";
        try {
            oracle = new URL(s);

            BufferedReader in = new BufferedReader(
                    new InputStreamReader(oracle.openStream()));

            String inputLine;
            String html = "";
            while ((inputLine = in.readLine()) != null) {
                html += inputLine;
            }
            in.close();
            return html;
        } catch (MalformedURLException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        return "Error";
    }
    private String parseName(String s) {
        s = getHtml(s);
        int start = s.indexOf("<h4>");
        int end = s.indexOf("</h4>");
        
        if (start < end) {
            s = s.substring(start + 4, end);
            return s;
        } else {
            return "Name not found";
        }
    }
    private String parseSeats(String s){                     
                String toFind = "Total Seats Remaining:</td><td align=&#39;left&#39;><strong>";
                int start = s.indexOf(toFind);
                s = s.substring(start + toFind.length(),start + toFind.length()+1);    
                System.out.println("Parsed Seats: "+s);
                return s;
    }
    private void getNumSeats() {  
        LinkedList<String> modelToSwitch = new LinkedList();
        LinkedList<String> arrayToSwitch = new LinkedList();

        for(int i = 0;i<linkArrayFull.size();i++){
            String s = linkArrayFull.get(i);
            System.out.println(s);
            String html = getHtml(s);
            String seats = parseSeats(html);
//            jTextDebug.setText(jTextDebug.getText()+seats);
            //Anything other than a zero means that the course is open.
            if (!seats.equals("0")) {
                modelToSwitch.add(linkModelFull.get(i));
                arrayToSwitch.add(linkArrayFull.get(i)); 
//                btnStart.setText("Start");
                SendEmail em1 = new SendEmail(txtEmail.getText());
                em1.send("The Following Course has opened up: \n"+s+"&campuscd=UBCO",jCheckBoxEmail.isSelected());
//                killTimer = true;
            }
//                txtOutput.setText(txtOutput.getText() + "\n" + html);
            java.util.Date date = new java.util.Date();
            lblLastChecked.setText("Last Checked: " + new Timestamp(date.getTime()).toString());
            lblCount.setText("Count: " + count++);            
        }
        if(modelToSwitch.size()>0){
            for(String s:modelToSwitch){                               
                linkModelOpen.addElement(s);
                linkModelFull.removeElement(s);
                jLinkListFull.setModel(linkModelFull);
                jLinkListOpen.setModel(linkModelOpen);
            }
            for(String s:arrayToSwitch){
                linkArrayOpen.add(s);
                linkArrayFull.remove(s);
            }
        }
    }
    
    private void saveList(){
        int returnVal = fileChooser.showSaveDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();

            try {
                // What to do with the file, e.g. display it in a TextArea
                String path = file.getAbsolutePath();
                if (!path.contains(".UBCO")) {
                    path = path + ".UBCO";
                }
                PrintWriter out = new PrintWriter(path);
                for (String s : linkArrayFull) {
                    out.println(s);
                }
                for (String s : linkArrayOpen) {
                    out.println(s);
                }
                out.close();

            } catch (IOException ex) {
                System.out.println("problem accessing file" + file.getAbsolutePath());
            }
        } else {
            System.out.println("File access cancelled by user.");
        }
    }
    

    
    private void jButtonTestSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTestSendActionPerformed
        SendEmail em = new SendEmail(txtEmail.getText());
        em.send(jTextTestMsg.getText(),jCheckBoxEmail.isSelected());
    }//GEN-LAST:event_jButtonTestSendActionPerformed

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        addToLists(jTextFieldAddLink.getText());
    }//GEN-LAST:event_jButtonAddActionPerformed

    private void jMenuSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuSaveActionPerformed
        saveList();
    }//GEN-LAST:event_jMenuSaveActionPerformed

    private void saveConfirm(){
        int choice = JOptionPane.showConfirmDialog (null, "Save Current List?","Save",JOptionPane.YES_NO_OPTION ); 
            if(choice == JOptionPane.YES_OPTION){
                saveList();
            }
    }
    private void jMenuOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuOpenActionPerformed
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            Scanner in;
            try {
                in = new Scanner(file);
            saveConfirm();
            clearLists();
            while(in.hasNext()){
                addToLists(in.next());
            }
            in.close();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            System.out.println("File access cancelled by user.");
        }
    }//GEN-LAST:event_jMenuOpenActionPerformed

    private void jTextFieldAddLinkFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldAddLinkFocusGained
        Clipboard c = Toolkit.getDefaultToolkit().getSystemClipboard();
        Transferable t = c.getContents( null );

        if ( t.isDataFlavorSupported(DataFlavor.stringFlavor) )
        {
            try {
                Object o = t.getTransferData( DataFlavor.stringFlavor );
                String data = (String)t.getTransferData( DataFlavor.stringFlavor );
                jTextFieldAddLink.setText(data);
            } catch (UnsupportedFlavorException | IOException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jTextFieldAddLinkFocusGained

    private void jButtonRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoveActionPerformed
        int i = jLinkListFull.getSelectedIndex();
        int j = jLinkListOpen.getSelectedIndex();
        if (i >= 0) {
            linkArrayFull.remove(i);
            linkModelFull.remove(i);
        }
        if (j >= 0) {
            linkArrayOpen.remove(j);
            linkModelOpen.remove(j);
        }
        
    }//GEN-LAST:event_jButtonRemoveActionPerformed

    private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartActionPerformed
        if(killTimer){        
        btnStart.setText("Stop");
        killTimer = false;        
      }else{          
          btnStart.setText("Start");
          killTimer = true;          
      }
          
        
      Timer timer = new Timer();      
      TimerTask task = new TimerTask(){
          @Override
          public void run(){      
              if(!killTimer)
                 getNumSeats();       
              else
                  timer.cancel();
          }
      };
       
      timer.scheduleAtFixedRate(task, 0, 60000*(int)Integer.parseInt(txtSpeed.getText()));
    }//GEN-LAST:event_btnStartActionPerformed

    private void txtSpeedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSpeedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSpeedActionPerformed

    private void jLinkListFullMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLinkListFullMouseClicked
       linkClicked(evt);
    }//GEN-LAST:event_jLinkListFullMouseClicked

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        saveConfirm();
    }//GEN-LAST:event_formWindowClosing

    private void jLinkListFullFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jLinkListFullFocusGained
        jLinkListOpen.clearSelection();
    }//GEN-LAST:event_jLinkListFullFocusGained

    private void jLinkListOpenFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jLinkListOpenFocusGained
        jLinkListFull.clearSelection();
    }//GEN-LAST:event_jLinkListOpenFocusGained

    private void jLinkListOpenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLinkListOpenMouseClicked
        linkClicked(evt);
    }//GEN-LAST:event_jLinkListOpenMouseClicked

    /**
     * @param args the command line arguments
     */
    
    public static void main(String args[]) throws MalformedURLException, IOException {
        
        
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnStart;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonRemove;
    private javax.swing.JButton jButtonTestSend;
    private javax.swing.JCheckBox jCheckBoxEmail;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JList jLinkListFull;
    private javax.swing.JList jLinkListOpen;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuOpen;
    private javax.swing.JMenuItem jMenuSave;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTextField jTextFieldAddLink;
    private javax.swing.JTextField jTextTestMsg;
    private javax.swing.JLabel lblCount;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblLastChecked;
    private javax.swing.JLabel lblLink;
    private javax.swing.JLabel lblLink1;
    private javax.swing.JLabel lblSpeed;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtSpeed;
    // End of variables declaration//GEN-END:variables

    
    //Opens link in browser
    private void linkClicked(java.awt.event.MouseEvent evt) {
        LinkedList<String> array;
        JList list = (JList) evt.getComponent();
        if(list.equals(jLinkListFull)){
            array = linkArrayFull;
        }else{
            array = linkArrayOpen;
        }        
        if (evt.getClickCount() == 2 && !evt.isConsumed()) {
            int i = list.getSelectedIndex();
            if (i >= 0) {
                String url = array.get(i)+"&campuscd=UBCO";
                try {
                    //Assume browser is supported on Desktop API
                    Desktop.getDesktop().browse(new URI(url));
                } catch (IOException ex) {
                    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                } catch (URISyntaxException ex) {
                    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }

    
}
